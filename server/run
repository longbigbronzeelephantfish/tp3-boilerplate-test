#!/bin/bash

if [ $1 = 'install' ]
then cmd="dotnet restore server && dotnet restore server.tests && cd server.postman && yarn install"

elif [ $1 = 'clean' ]
then cmd="dotnet clean server && dotnet clean server.tests"

elif [ $1 = 'dev' ]
then cmd="cd server && env ASPNETCORE_ENVIRONMENT=Development dotnet run -c Debug --no-launch-profile"

elif [ $1 = 'test' ]
then cmd="cd server.tests && dotnet test"

elif [ $1 = 'postman-test' ]
then cmd="cd server.postman && yarn run test"

elif [ $1 = 'publish' ]
then cmd="cd server && env ASPNETCORE_ENVIRONMENT=Production dotnet publish -c Release -o ./app"

elif [ $1 = 'docker-test' ]
then cmd="docker build -t server-test -f ./Dockerfile.Testing . && docker run --name server-test -t server-test && docker rm server-test"

elif [ $1 = 'docker-publish' ]
then cmd="docker build -t server -f ./Dockerfile.Production . && docker run -d --name server -p 5000:5000 -t server"

elif [ $1 = 'docker-stop' ]
then cmd="docker stop server && docker rm server"

elif [ $1 = 'help' ]
then
  echo Commands:
  echo install: initialise the project
  echo clean: clean the project directories
  echo dev: start a server for development or testing
  echo test: run tests
  echo postman-test: run postman tests
  echo publish: build the server for production the project directories
  echo docker-test: run tests in docker
  echo docker-publish: run production server in docker
  echo docker-stop: stop docker production server
  exit

else
  echo Command \"$1\" not found.
  exit
fi

echo Running command \"$1\".
echo "$" $cmd
eval $cmd
